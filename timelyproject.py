# -*- coding: utf-8 -*-
"""timelyProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Ujg2lWGuZB6NGSqQRG4G33PvYyyUF7F
"""

import pandas as pd
# Load TestServicesData into dataframes
services_data = pd.read_csv('Services.csv')
# Load TestAppointmentsData into dataframes
appointments_data = pd.read_csv('Appointments.csv')
# Check the first five rows of the Services data
services_data.head()

# Check the first five rows of the Appointments data
appointments_data.head()

# Changing the name of 'Name' column in Services data into 'Service' so that we can combine the two given data sets based on a common series.
services_data.rename(columns={'Name': 'Service'}, inplace=True)
services_data.head()

# Merged data for our use.
transformed_data = pd.merge(appointments_data, services_data, on='Service', how='inner')
transformed_data.head()

transformed_data.rename(columns={'Start time': 'Start_time'}, inplace=True)
transformed_data.head()

# using describe function to check the description/datatype of the columns in our merged data.
transformed_data.describe()
transformed_data.dtypes

# user defined function to split the data and swap the last and first names to create the required format of the name.
def split_and_concatenate(row):
    values = row['Stylist'].split(',')
    return values[1].replace(" ","") + " " + values[0]

# using the above created function on column 'Stylist'
transformed_data['Staff'] = transformed_data.apply(split_and_concatenate, axis=1)
transformed_data

# user defined function to split the data and swap the last and first names to create the required format of the name.
def split_and_concatenate(row):
    values = row['CustomerName'].split(',')
    return values[1].replace(" ","") + " " + values[0]

# using the above created function on column 'CustomerName'
transformed_data['Customer_Name'] = transformed_data.apply(split_and_concatenate, axis=1)
transformed_data

# removing 'Stylist', 'CustomerName' columns from data as they are not required now.
columns_to_drop = ['Stylist', 'CustomerName']
transformed_data = transformed_data.drop(columns=columns_to_drop, inplace=False)

transformed_data.head()

# concatenating date and start time columns for the required start and end time format.
transformed_data['Start Date'] =transformed_data['Date'] + " " + transformed_data['Start_time']
transformed_data.head()

from datetime import datetime, timedelta

# converting Duration column into minutes.
transformed_data['Durationinminutes'] = pd.to_timedelta(transformed_data['Duration'], unit='m')

# transforming the data in start time column in datetime format.
transformed_data['Start_time'] = pd.to_datetime(transformed_data['Start_time'])
transformed_data.head()

# transforming the data in start date column in datetime format.
transformed_data['Start Date'] = pd.to_datetime(transformed_data['Start Date'])

# dropping the not required columns now i.e. 'Date', 'Start_time'
columns_to_drop = ['Date', 'Start_time']
transformed_data = transformed_data.drop(columns=columns_to_drop, inplace=False)
transformed_data.head()

transformed_data.dtypes

# adding data in start date and durationinminutes column to create end date column.
transformed_data['End Date'] = transformed_data['Start Date'] + transformed_data['Durationinminutes']
transformed_data.head()

transformed_data.tail()

# dropping unneccesary columns.
columns_to_drop = ['Durationinminutes', 'Category','Duration','Description',]
transformed_data = transformed_data.drop(columns=columns_to_drop, inplace=False)
transformed_data.head()

new_value = 'Clinic'

# Add a new column at location 0 with the same value for all rows ie. 'Clinic'
transformed_data.insert(0, 'Location', new_value)
transformed_data.head()

# converting final output in excel format.
transformed_data.to_excel('output.xlsx', index=False)